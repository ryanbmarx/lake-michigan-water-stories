$space_between_mobile_buttons: 15px;
$logo_width: 200px;

// Give the navbar space to exist without overlapping anything at the top of the page.
// body{
// 	padding-top:$nav_height + $nav_padding_v * 2;
// }

.navbar{
	background: rgba($trib-blue2, .92);
	box-shadow: 0 2px 6px rgba(black, .35);
	position: fixed;
	top:0;
	left: 0;
	width: 100%;
    z-index: 10000;

	&__inner{
		padding: $nav_padding_v $nav_padding_h;
		display: flex;
		align-items: center;
		justify-content: flex-start;
		max-width: 1500px;
		margin: 0 auto;
		height: $nav_height;

	}
	// .navbar__toggle{
	// 	display:block;
	// }

	&__logo{
		display:block;
		max-width: $logo_width;
	    transform: translate(0,2px); // This cheats the logo down a bit so alignment with other items is tidy.

		img{
			width: 100%;
		}
	}

	&__toggle{
	    border: 1px solid transparent;
	    margin-right: 15px;
	    padding: 9px 10px;
	    background-color: transparent;
	    background-image: none;
	    border-radius: 4px;
		cursor:pointer;
		position:relative;

		&:hover, &:focus{ 
			background: rgba(black, .4); 
		}

		.icon-bar{
			// The little stripes in the hamburger button
			display: block;
			width: 22px;
			height: 2px;
			border-radius: 1px;
			background: white;
		
			&:nth-child(3){
				// The middle icon bar should push the other two away to make a proper burger menu.
				margin: 5px 0;
			}
		}

		label{
			// This is key to the "checkbox label hack" which uses css and the checked/unchecked state of
			// a checkbox to hide/show the navigation. This is nice because it does not rely on javascript.
			// The label is inside the button, which will check the checkbox.
			position:absolute;
			top:0;
			left:0;
			width: 100%;
			height: 100%;
			cursor:pointer;
		}
	}
}



#toggle{
	// Hide our actual toggling checkbox off the grid.
	position:absolute;
	right: 100%;
}

// The nav menu is controlled solely through a checkbox. By default, the menu is positioned
// off the screen. If the checkbox is checked, then the menu is selected via the adjacent 
// siblings (`~`) selector and positioned on the left edge.


.nav-buttons-wrapper{
    // POSITIONING

    position: absolute;
    left: -400px;
    top: $nav_height + $nav_padding_v * 2;
    
	background:$trib-blue2;
	opacity:0;

    width: 100%;
    height:auto;
    max-width: 400px;
    
    transition:left 400ms ease, opacity 400ms ease;		


}

.nav-buttons-wrapper--visible{
	left:0;
	opacity:1;
	transition:opacity 400ms ease, left 400ms ease;		
}

// #toggle{
// 	display:none;

// 	&:checked ~ .nav-buttons-wrapper, .nav-buttons-wrapper--visible{
//     	left:0;
//     	opacity:1;
//     	transition:opacity 400ms ease, left 400ms ease;		
// 	}
// }

.nav-buttons{
	// These are the actual menu items
	margin:0;
	padding:$space_between_mobile_buttons;
	list-style-type: none;

	li{
		// padding-bottom:$space_between_mobile_buttons;
		margin-bottom:$space_between_mobile_buttons;
		// border-bottom:1px solid rgba(white, .5);
		&:last-child {
	 		// This strips the styling from the last menu item.
	 		margin-bottom:0;
	 		border-bottom:none;
	 	}   
	 }
	}

	.nav-button{
		@include sans-serif-text(14px, 1em);
		color:white;
		display:block;
		text-align: center;
		background: rgba(white,.2);
		padding: 25px 0;
		border-radius: 5px;
		text-decoration:none;
	}


@media all and (min-width: $tablet-min-width){
	
}

@media all and (min-width: $desktop-min-width){

}

@media all and (min-width: 1000px){

	.nav-buttons li{
    		// Just a little tweak once we have more display space.
    		// ... b/c one line is best, not wrapper.
			width: auto;
	}
}